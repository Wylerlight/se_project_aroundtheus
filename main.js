!function(){"use strict";const e=document.querySelector(".profile__button-edit"),t=document.querySelector(".profile-container").querySelector(".profile-input"),r=t.querySelector("#modal-description-name"),s=t.querySelector("#modal-description-job"),n=document.querySelector(".profile__button-add"),i=(document.querySelector(".profile__avatar"),document.querySelector(".profile__avatar-edit"));document.querySelector("#modal-edit-profile-button"),document.querySelector("#modal-add-card-button"),document.querySelector("#modal-avatar-image-save"),document.querySelector("#modal-verify-delete-card-button");class o{constructor(e,t,r,s,n,i,o){this._userId=s,this._cardId=e._id,this._currentIdOwner=e.owner._id,this._name=e.name,this._link=e.link,this._handleCardClick=r,this._cardTrashButtonVerify=i,this._handleCardLike=n,this._cardLikes=e.likes,this._cardSelector=t,this.cardIsLiked=this.cardIsLiked.bind(this),this._handleDeleteCard=o}handleCardTrashButton(){const e=this._element.querySelector(".card__trash-button");this._currentIdOwner!==this._userId&&e.remove()}updateLike(e){this._cardLikes=e.likes,this.showCardLikes()}showCardLikes(){this._cardLikes.length>0?this._element.querySelector(".card__like-counter").textContent=this._cardLikes.length:this._element.querySelector(".card__like-counter").textContent="",this.cardIsLiked()?this._element.querySelector(".card__button").classList.add("card__like-active"):this._element.querySelector(".card__button").classList.remove("card__like-active")}cardIsLiked(){return this._cardLikes.some((e=>e._id===this._userId))}_getTemplate(){return document.querySelector(this._cardSelector).content.firstElementChild.cloneNode(!0)}_setEventListeners(){const e=this._element.querySelector(".card__button");this._element.querySelector(".card__trash-button").addEventListener("click",(()=>{this._cardTrashButtonVerify(),this._handleDeleteCard(this._cardId,this._element)})),this._cardImageElement.addEventListener("click",(()=>{this._handleCardClick(this._cardImageElement)})),e.addEventListener("click",(()=>{this._handleCardLike(this)}))}getCard(){this._element=this._getTemplate();const e=this._element.querySelector(".card__title");return this._cardImageElement=this._element.querySelector(".card__image"),e.textContent=this._name,this._cardImageElement.src=this._link,this._cardImageElement.alt=this._name,this._setEventListeners(),this.handleCardTrashButton(),this.showCardLikes(),this._element}}class a{constructor(e,t){this._formElement=t,this._inputSelector=e.inputSelector,this._submitButtonSelector=e.submitButtonSelector,this._inactiveButtonClass=e.inactiveButtonClass,this._inputErrorClass=e.inputErrorClass,this._errorClass=e.errorClass}_showInputError(e){this._errorElement=this._formElement.querySelector(`.${e.id}-error`),e.classList.add(this._inputErrorClass),this._errorElement.textContent=e.validationMessage,this._errorElement.classList.add(this._errorClass)}_hideInputError(e){const t=this._formElement.querySelector(`.${e.id}-error`);e.classList.remove(this._inputErrorClass),t.classList.remove(this._errorClass),t.textContent=""}_checkInputValidity(e){e.validity.valid?this._hideInputError(e):this._showInputError(e)}_hasInvalidInput(e){return e.some((e=>!e.validity.valid))}toggleButtonState(){this._hasInvalidInput(this._inputList)?(this._buttonElement.classList.add(this._inactiveButtonClass),this._buttonElement.disabled=!0):(this._buttonElement.classList.remove(this._inactiveButtonClass),this._buttonElement.disabled=!1)}_setEventListeners(){this._inputList=Array.from(this._formElement.querySelectorAll(this._inputSelector)),this._buttonElement=this._formElement.querySelector(this._submitButtonSelector),this._inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkInputValidity(e),this.toggleButtonState()}))}))}enableValidation(){this._formElement.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners()}}class l{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this),this.close=this.close.bind(this),this.open=this.open.bind(this),this._modalExitButton=this._popupElement.querySelector(".modal__exit")}open(){this._popupElement.classList.add("modal_opened"),document.addEventListener("keydown",this._handleEscClose)}close(){this._popupElement.classList.remove("modal_opened"),document.removeEventListener("keydown",this._handleEscClose)}_handleEscClose(e){"Escape"===e.key&&this.close()}setEventListeners(){this._modalExitButton.addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",this._overlayClickCloseListener)}_overlayClickCloseListener=e=>{e.target===e.currentTarget&&this.close(e.target)}}class d extends l{constructor(e,t){super(e),this._popupForm=this._popupElement.querySelector(".modal__form"),this._handleFormSubmit=t.bind(this),this._modalInputs=this._popupForm.querySelectorAll(".modal__field"),this._submitButton=this._popupForm.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}_getInputValues(){const e={};return this._modalInputs.forEach((t=>{e[t.name]=t.value})),e}setEventListeners(){this._popupForm.addEventListener("submit",(e=>{e.preventDefault(),this._handleFormSubmit(this._getInputValues())})),super.setEventListeners()}close(){this._popupForm.reset(),super.close()}}const c=new class{constructor(e){let{baseUrl:t,headers:r}=e;this._baseUrl=t,this._headers=r}_checkResponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkResponse)}getUserInformation(){return this._request(`${this._baseUrl}/users/me`,{headers:this._headers}).finally((()=>{console.log("Done with getting user info")}))}updateProfilePicture(e){let{avatar:t}=e;return this._request(`${this._baseUrl}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:t})}).then((e=>e)).finally((()=>{console.log("Done running Avatar change API")}))}getInitialCards(){return this._request(`${this._baseUrl}/cards`,{headers:this._headers}).then((e=>e)).finally((()=>{console.log("Done with getting initial cards")}))}addNewCard(e){let{name:t,link:r}=e;return this._request(`${this._baseUrl}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})}).then((e=>e)).finally((()=>{console.log("Done adding card from server to page")}))}editProfileInformation(e){let{name:t,about:r}=e;return this._request(`${this._baseUrl}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})}).then((e=>e)).finally((()=>{console.log("Done sending user info to server")}))}deleteCardRequest(e){return this._request(`${this._baseUrl}/cards/${e}`,{method:"DELETE",headers:this._headers}).finally((()=>{console.log("Done deleting card")}))}likesCountAdd(e){return this._request(`${this._baseUrl}/cards/likes/${e}`,{method:"PUT",headers:this._headers}).then((e=>e)).finally((()=>{console.log("Done adding like")}))}likesCountRemove(e){return this._request(`${this._baseUrl}/cards/likes/${e}`,{method:"DELETE",headers:this._headers}).then((e=>e)).finally((()=>{console.log("Done deleting like")}))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"5e7676bf-611c-4ca9-9820-f740c8ee0732","Content-Type":"application/json"}});let h;const u=new class extends l{constructor(e){super(e)}open(e){const t=this._popupElement.querySelector(".image__main"),r=this._popupElement.querySelector(".image__description");t.src=e.src,t.alt=e.alt,r.textContent=e.alt,super.open()}}(".image");function _(e){u.open(e)}u.setEventListeners();const m=new class{constructor(e){let{userNameSelector:t,userJobSelector:r,userAvatarSelector:s}=e;this._userNameElement=document.querySelector(t),this._userJobElement=document.querySelector(r),this._userAvatarElement=document.querySelector(s)}getUserInfo(){return{userName:this._userNameElement.textContent,userJobDescription:this._userJobElement.textContent}}setUserInfo(e){this._userNameElement.textContent=e.name,this._userJobElement.textContent=e.about,this._userAvatarElement.src=e.avatar,this._userAvatarElement.alt=e.name}}({userNameSelector:".profile__title",userJobSelector:".profile__description",userAvatarSelector:".profile__avatar"}),p=new class{constructor(e,t){let{renderer:r}=e;this._renderer=r,this._container=document.querySelector(t)}renderItems(e){e.reverse().forEach((e=>{this._renderer(e)}))}addItem(e){this._container.prepend(e)}}({renderer:e=>{const t=new o(e,"#card-template",_,h,y,C,L).getCard();p.addItem(t)}},".cards"),E={};var v;v={formSelector:".modal__form",inputSelector:".modal__field",submitButtonSelector:".modal__button",inactiveButtonClass:"modal__button_disabled",inputErrorClass:"modal__field_type_error",errorClass:"modal__error_visible"},Array.from(document.querySelectorAll(v.formSelector)).forEach((e=>{const t=new a(v,e),r=e.getAttribute("id");E[r]=t,t.enableValidation()})),Promise.all([c.getUserInformation(),c.getInitialCards()]).then((e=>{let[t,r]=e;h=t._id,m.setUserInfo(t),p.renderItems(r)})).catch((e=>{console.error(e)}));const f=new d(".avatar__modal",(function(e){f.renderLoading(e),c.updateProfilePicture(e).then((e=>{m.setUserInfo(e)})).then((()=>{f.close()})).catch((e=>{console.error(e)})).finally((()=>{f.renderLoading(!1)}))}));i.addEventListener("click",(()=>{E["avatar-form"].toggleButtonState(),f.open()})),f.setEventListeners();const b=new d(".card-modal",(function(e){b.renderLoading(e),c.addNewCard(e).then((e=>{p.renderItems([e])})).then((()=>{b.close()})).catch((e=>{console.error(e)})).finally((()=>{b.renderLoading(!1)}))}));n.addEventListener("click",(()=>{E["new-card-form"].toggleButtonState(),b.open()})),b.setEventListeners();const S=new d(".profile-modal",(function(e){S.renderLoading(e),c.editProfileInformation(e).then((e=>{m.setUserInfo(e)})).then((()=>{S.close()})).catch((e=>{console.error(e)})).finally((()=>{S.renderLoading(!1)}))}));function y(e){e.cardIsLiked()?c.likesCountRemove(e._cardId).then((t=>{e.updateLike(t)})).catch((e=>{console.error(e)})):c.likesCountAdd(e._cardId).then((t=>{e.updateLike(t)})).catch((e=>{console.error(e)}))}S.setEventListeners(),e.addEventListener("click",(()=>{const e=m.getUserInfo();r.value=e.userName,s.value=e.userJobDescription,E["profile-input-form"].toggleButtonState(),S.open()}));const g=new class extends l{constructor(e,t){super(e),this._verifyDeleteCardButton=this._popupElement.querySelector("#modal-verify-delete-card-button"),this._handleFormSubmit=t,this._handleSubmit=this._handleSubmit.bind(this),this._popupForm=this._popupElement.querySelector(".modal__form"),this._submitButton=this._popupForm.querySelector(".modal__button"),this._submitButtonText=this._submitButton.textContent}renderLoading(e){let t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"Saving...";this._submitButton.textContent=e?t:this._submitButtonText}setSubmitAction(e){this._handleFormSubmit=e}setEventListeners(){super.setEventListeners(),this._verifyDeleteCardButton.addEventListener("click",this._handleSubmit)}_handleSubmit(){this._handleFormSubmit()}}(".card-delete-verify",L);function L(e,t){g.setSubmitAction((()=>{g.renderLoading(e),c.deleteCardRequest(e).then((()=>{t.remove()})).then((()=>{g.close()})).catch((e=>{console.error(e)})).finally((()=>{g.renderLoading(!1)}))}))}function C(){g.open()}g.setEventListeners()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,